name: Python CI/CD with Automatic and Manual Versioning

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 2024.2.11)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pip install pytest
          pytest

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Determine Version to Release
        id: determine_version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            # No version provided, use version.txt
            VERSION=$(cat version.txt)
          else
            # Use the manually provided version
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install -r requirements.txt

      - name: Build distribution
        run: |
          python setup.py sdist bdist_wheel

      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      
      - name: Configure Git User
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Tag Release in GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ env.version }}
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"

  increment-version:
    runs-on: ubuntu-latest

    needs: deploy

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Increment Version
        id: increment_version
        run: |
          # Ensure VERSION is correctly set
          if [ -z "${{ env.version }}" ]; then
            VERSION=$(cat version.txt)
          else
            VERSION=${{ env.version }}
          fi

          # Extract components of the version
          YEAR=$(date +%Y)
          CURRENT_YEAR=$(echo $VERSION | cut -d '.' -f 1)
          RELEASE=$(echo $VERSION | cut -d '.' -f 2)

          # Reset release if year changes, otherwise increment the release
          if [ "$CURRENT_YEAR" != "$YEAR" ]; then
            NEW_VERSION="$YEAR.1.1"
          else
            NEW_VERSION="$YEAR.$((RELEASE + 1)).1"
          fi

          # Save the new version
          echo $NEW_VERSION > version.txt
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and Push Incremented Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Increment version to ${{ env.new_version }}"
          git push origin main
